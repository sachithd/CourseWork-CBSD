
package webservices;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerOperationsWS", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerOperationsWS {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createCustomer", targetNamespace = "http://webservices/", className = "webservices.CreateCustomer")
    @Action(input = "http://webservices/CustomerOperationsWS/createCustomer")
    public void createCustomer(
        @WebParam(name = "entity", targetNamespace = "")
        Customers entity);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeCustomer", targetNamespace = "http://webservices/", className = "webservices.RemoveCustomer")
    @Action(input = "http://webservices/CustomerOperationsWS/removeCustomer")
    public void removeCustomer(
        @WebParam(name = "entity", targetNamespace = "")
        Customers entity);

    /**
     * 
     * @return
     *     returns java.util.List<webservices.Customers>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllCustomer", targetNamespace = "http://webservices/", className = "webservices.FindAllCustomer")
    @ResponseWrapper(localName = "findAllCustomerResponse", targetNamespace = "http://webservices/", className = "webservices.FindAllCustomerResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findAllCustomerRequest", output = "http://webservices/CustomerOperationsWS/findAllCustomerResponse")
    public List<Customers> findAllCustomer();

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<webservices.Customers>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRangeCustomer", targetNamespace = "http://webservices/", className = "webservices.FindRangeCustomer")
    @ResponseWrapper(localName = "findRangeCustomerResponse", targetNamespace = "http://webservices/", className = "webservices.FindRangeCustomerResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findRangeCustomerRequest", output = "http://webservices/CustomerOperationsWS/findRangeCustomerResponse")
    public List<Customers> findRangeCustomer(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countCustomer", targetNamespace = "http://webservices/", className = "webservices.CountCustomer")
    @ResponseWrapper(localName = "countCustomerResponse", targetNamespace = "http://webservices/", className = "webservices.CountCustomerResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/countCustomerRequest", output = "http://webservices/CustomerOperationsWS/countCustomerResponse")
    public int countCustomer();

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<webservices.Country>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRangeCountry", targetNamespace = "http://webservices/", className = "webservices.FindRangeCountry")
    @ResponseWrapper(localName = "findRangeCountryResponse", targetNamespace = "http://webservices/", className = "webservices.FindRangeCountryResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findRangeCountryRequest", output = "http://webservices/CustomerOperationsWS/findRangeCountryResponse")
    public List<Country> findRangeCountry(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @return
     *     returns java.util.List<webservices.Country>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllCountry", targetNamespace = "http://webservices/", className = "webservices.FindAllCountry")
    @ResponseWrapper(localName = "findAllCountryResponse", targetNamespace = "http://webservices/", className = "webservices.FindAllCountryResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findAllCountryRequest", output = "http://webservices/CustomerOperationsWS/findAllCountryResponse")
    public List<Country> findAllCountry();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeAddress", targetNamespace = "http://webservices/", className = "webservices.RemoveAddress")
    @Action(input = "http://webservices/CustomerOperationsWS/removeAddress")
    public void removeAddress(
        @WebParam(name = "entity", targetNamespace = "")
        Address entity);

    /**
     * 
     * @return
     *     returns java.util.List<webservices.Address>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllAddress", targetNamespace = "http://webservices/", className = "webservices.FindAllAddress")
    @ResponseWrapper(localName = "findAllAddressResponse", targetNamespace = "http://webservices/", className = "webservices.FindAllAddressResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findAllAddressRequest", output = "http://webservices/CustomerOperationsWS/findAllAddressResponse")
    public List<Address> findAllAddress();

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<webservices.Address>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRangeAddress", targetNamespace = "http://webservices/", className = "webservices.FindRangeAddress")
    @ResponseWrapper(localName = "findRangeAddressResponse", targetNamespace = "http://webservices/", className = "webservices.FindRangeAddressResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findRangeAddressRequest", output = "http://webservices/CustomerOperationsWS/findRangeAddressResponse")
    public List<Address> findRangeAddress(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @param id
     * @return
     *     returns webservices.Address
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAddress", targetNamespace = "http://webservices/", className = "webservices.FindAddress")
    @ResponseWrapper(localName = "findAddressResponse", targetNamespace = "http://webservices/", className = "webservices.FindAddressResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findAddressRequest", output = "http://webservices/CustomerOperationsWS/findAddressResponse")
    public Address findAddress(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countAddress", targetNamespace = "http://webservices/", className = "webservices.CountAddress")
    @ResponseWrapper(localName = "countAddressResponse", targetNamespace = "http://webservices/", className = "webservices.CountAddressResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/countAddressRequest", output = "http://webservices/CustomerOperationsWS/countAddressResponse")
    public int countAddress();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editAddress", targetNamespace = "http://webservices/", className = "webservices.EditAddress")
    @Action(input = "http://webservices/CustomerOperationsWS/editAddress")
    public void editAddress(
        @WebParam(name = "entity", targetNamespace = "")
        Address entity);

    /**
     * 
     * @param id
     * @return
     *     returns webservices.Country
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCountry", targetNamespace = "http://webservices/", className = "webservices.FindCountry")
    @ResponseWrapper(localName = "findCountryResponse", targetNamespace = "http://webservices/", className = "webservices.FindCountryResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findCountryRequest", output = "http://webservices/CustomerOperationsWS/findCountryResponse")
    public Country findCountry(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editCountry", targetNamespace = "http://webservices/", className = "webservices.EditCountry")
    @Action(input = "http://webservices/CustomerOperationsWS/editCountry")
    public void editCountry(
        @WebParam(name = "entity", targetNamespace = "")
        Country entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countCountry", targetNamespace = "http://webservices/", className = "webservices.CountCountry")
    @ResponseWrapper(localName = "countCountryResponse", targetNamespace = "http://webservices/", className = "webservices.CountCountryResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/countCountryRequest", output = "http://webservices/CustomerOperationsWS/countCountryResponse")
    public int countCountry();

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeCountry", targetNamespace = "http://webservices/", className = "webservices.RemoveCountry")
    @Action(input = "http://webservices/CustomerOperationsWS/removeCountry")
    public void removeCountry(
        @WebParam(name = "entity", targetNamespace = "")
        Country entity);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createCountry", targetNamespace = "http://webservices/", className = "webservices.CreateCountry")
    @Action(input = "http://webservices/CustomerOperationsWS/createCountry")
    public void createCountry(
        @WebParam(name = "entity", targetNamespace = "")
        Country entity);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createAddress", targetNamespace = "http://webservices/", className = "webservices.CreateAddress")
    @Action(input = "http://webservices/CustomerOperationsWS/createAddress")
    public void createAddress(
        @WebParam(name = "entity", targetNamespace = "")
        Address entity);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editCustomer", targetNamespace = "http://webservices/", className = "webservices.EditCustomer")
    @Action(input = "http://webservices/CustomerOperationsWS/editCustomer")
    public void editCustomer(
        @WebParam(name = "entity", targetNamespace = "")
        Customers entity);

    /**
     * 
     * @param id
     * @return
     *     returns webservices.Customers
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCustomer", targetNamespace = "http://webservices/", className = "webservices.FindCustomer")
    @ResponseWrapper(localName = "findCustomerResponse", targetNamespace = "http://webservices/", className = "webservices.FindCustomerResponse")
    @Action(input = "http://webservices/CustomerOperationsWS/findCustomerRequest", output = "http://webservices/CustomerOperationsWS/findCustomerResponse")
    public Customers findCustomer(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

}
